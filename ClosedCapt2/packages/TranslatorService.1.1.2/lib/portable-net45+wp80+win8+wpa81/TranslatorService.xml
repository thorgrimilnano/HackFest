<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TranslatorService</name>
    </assembly>
    <members>
        <member name="T:TranslatorService.AzureAuthToken">
            <summary>
            Client to call Cognitive Services Azure Auth Token service in order to get an access token.
            </summary>
        </member>
        <member name="F:TranslatorService.AzureAuthToken.ServiceUrl">
            URL of the token service
        </member>
        <member name="F:TranslatorService.AzureAuthToken.OcpApimSubscriptionKeyHeader">
            Name of header used to pass the subscription key to the token service
        </member>
        <member name="F:TranslatorService.AzureAuthToken.TokenCacheDuration">
            After obtaining a valid token, this class will cache it for this duration.
            Use a duration of 8 minutes, which is less than the actual token lifetime of 10 minutes.
        </member>
        <member name="F:TranslatorService.AzureAuthToken.storedTokenValue">
            Cache the value of the last valid token obtained from the token service.
        </member>
        <member name="F:TranslatorService.AzureAuthToken.storedTokenTime">
            When the last valid token was obtained.
        </member>
        <member name="M:TranslatorService.AzureAuthToken.#ctor(System.String)">
            <summary>
            Creates a client to obtain an access token.
            </summary>
            <param name="key">Subscription key to use to get an authentication token.</param>
        </member>
        <member name="M:TranslatorService.AzureAuthToken.GetAccessTokenAsync">
            <summary>
            Gets a token for the specified subscription.
            </summary>
            <returns>The encoded JWT token prefixed with the string "Bearer ".</returns>
            <remarks>
            This method uses a cache to limit the number of request to the token service.
            A fresh token can be re-used during its lifetime of 10 minutes. After a successful
            request to the token service, this method caches the access token. Subsequent
            invocations of the method return the cached token for the next 8 minutes. After
            8 minutes, a new token is fetched from the token service and the cache is updated.
            </remarks>
        </member>
        <member name="T:TranslatorService.ITranslatorServiceClient">
            <summary>
            The <strong>ITranslatorServiceClient</strong> interface specifies properties and methods to translate text in various supported languages.
            </summary>
        </member>
        <member name="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey">
            <summary>
            Gets or sets the Subscription key that is necessary to use <strong>Microsoft Translator Service</strong>.
            </summary>
            <value>The Subscription Key.</value>
            <remarks>
            <para>You must register Microsoft Translator on https://portal.azure.com/#create/Microsoft.CognitiveServices/apitype/TextTranslation to obtain the Subscription key needed to use the service.</para>
            </remarks>
        </member>
        <member name="P:TranslatorService.ITranslatorServiceClient.Language">
            <summary>
            Gets or sets the string representing the supported language code to translate the text in.
            </summary>
            <value>The string representing the supported language code to translate the text in. The code must be present in the list of codes returned from the method <see cref="M:TranslatorService.ITranslatorServiceClient.GetLanguageCodesAsync(TranslatorService.Models.ServiceType)"/>.</value>
            <seealso cref="M:TranslatorService.ITranslatorServiceClient.GetLanguageCodesAsync(TranslatorService.Models.ServiceType)"/>
        </member>
        <member name="P:TranslatorService.ITranslatorServiceClient.AudioFormat">
            <summary> 
            Gets or sets the audio format of the retrieved audio stream. Currently, <strong>Wav</strong> and <strong>MP3</strong> are supported. 
            </summary> 
            <value>The audio format of the retrieved audio stream. Currently, <strong>Wav</strong> and <strong>MP3</strong> are supported.</value> 
            <remarks>The default value is <strong>Mp3</strong>.</remarks>         
        </member>
        <member name="P:TranslatorService.ITranslatorServiceClient.AudioQuality">
            <summary> 
            Gets or sets the audio quality of the retrieved audio stream. Currently, <strong>MaxQuality</strong> and <strong>MinSize</strong> are supported. 
            </summary> 
            <value>The audio quality of the retrieved audio stream. Currently, <strong>MaxQuality</strong> and <strong>MinSize</strong> are supported.</value> 
            <remarks> 
            With <strong>MaxQuality</strong>, you can get the voice with the highest quality, and with <strong>MinSize</strong>, you can get the voices with the smallest size. The default value is <strong>MaxQuality</strong>. 
            </remarks> 
        </member>
        <member name="P:TranslatorService.ITranslatorServiceClient.AutomaticTranslation">
            <summary> 
            Gets or sets a value indicating whether the sentence to be spoken must be translated in the specified language. 
            </summary> 
            <value><strong>true</strong> if the sentence to be spoken must be translated in the specified language; otherwise, <strong>false</strong>.</value> 
            <remarks>If you don't need to translate to text to be spoken, you can speed-up the the library setting the <strong>AutomaticTranslation</strong> property to <strong>false</strong>. In this way, the specified text is passed as is to the other methods, without performing any translation. The default value is <strong>true</strong>.</remarks> 
        </member>
        <member name="P:TranslatorService.ITranslatorServiceClient.AutoDetectLanguage">
            <summary> 
            Gets or sets a value indicating whether the language of the text must be automatically detected before text-to-speech. 
            </summary> 
            <value><strong>true</strong> if the language of the text must be automatically detected; otherwise, <strong>false</strong>.</value> 
            <remarks>The <strong>AutoDetectLanguage</strong> property is used when the following methods are invoked: 
            <list type="bullet"> 
            <term><see cref="M:TranslatorService.ITranslatorServiceClient.GetSpeechStreamAsync(System.String,System.String)"/></term> 
            </list> 
            <para>When these methods are called, if the <strong>AutoDetectLanguage</strong> property is set to <strong>true</strong>, the language of the text is auto-detected before speech stream request. Otherwise, the language specified in the <seealso cref="P:TranslatorService.ITranslatorServiceClient.Language"/> property is used.</para> 
            <para>If the language to use is explicitly specified, using the versions of the methods that accept it, no auto-detection is performed.</para> 
            <para>The default value is <strong>true</strong>.</para> 
            </remarks> 
            <seealso cref="P:TranslatorService.ITranslatorServiceClient.Language"/> 
        </member>
        <member name="M:TranslatorService.ITranslatorServiceClient.InitializeAsync">
            <summary>
            Initializes the <see cref="T:TranslatorService.TranslatorServiceClient"/> class by getting an access token for the service.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the initialize operation.</returns>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</exception>
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks>Calling this method isn't mandatory, because the token is get/refreshed everytime is needed. However, it is called at startup, it can speed-up subsequest requests.</remarks>
        </member>
        <member name="M:TranslatorService.ITranslatorServiceClient.DetectLanguageAsync(System.String)">
            <summary>
            Detects the language of a text.
            </summary>
            <param name="text">A string represeting the text whose language must be detected.</param>
            <returns>A string containing a two-character Language code for the given text.</returns>
            <exception cref="T:System.ArgumentNullException">
            <list type="bullet">
            <term>The <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</term>
            <term>The <paramref name="text"/> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
            </list>
            </exception>        
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks><para>This method performs a non-blocking request for language detection.</para>
            <para>For more information, go to https://docs.microsofttranslator.com/text-translate.html#!/default/get_Detect.
            </para></remarks>
            <seealso cref="M:TranslatorService.ITranslatorServiceClient.GetLanguageCodesAsync(TranslatorService.Models.ServiceType)"/>
            <seealso cref="P:TranslatorService.ITranslatorServiceClient.Language"/>
        </member>
        <member name="M:TranslatorService.ITranslatorServiceClient.GetLanguageCodesAsync(TranslatorService.Models.ServiceType)">
            <summary>
            Retrieves the languages available for text translation and speech synthesis.
            </summary>
            <param name="serviceType">The service type for which to retrieve supported languages.</param>
            <returns>A string array containing the language codes supported for translation by <strong>Microsoft Translator Service</strong>.</returns>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</exception>
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks><para>This method performs a non-blocking request for language codes.</para>
            <para>For more information, go to https://docs.microsofttranslator.com/text-translate.html#!/default/get_GetLanguagesForTranslate (for translation languages) and https://docs.microsofttranslator.com/text-translate.html#!/default/get_GetLanguagesForSpeak (for speak synthesis).
            </para>
            </remarks>
            <seealso cref="T:TranslatorService.Models.ServiceType"/>
            <seealso cref="M:TranslatorService.ITranslatorServiceClient.GetLanguageNamesAsync(TranslatorService.Models.ServiceType,System.String)"/>
        </member>
        <member name="M:TranslatorService.ITranslatorServiceClient.GetLanguageNamesAsync(TranslatorService.Models.ServiceType,System.String)">
            <summary>
            Retrieves friendly names for the languages available for text translation and speech synthesis.
            </summary>
            <param name="serviceType">The service type for which to retrieve supported languages.</param>
            <param name="language">The language used to localize the language names. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:TranslatorService.ITranslatorServiceClient.Language"/> property will be used.</param>
            <returns>An array of <see cref="T:TranslatorService.Models.ServiceLanguage"/> containing the language codes and names supported for translation by <strong>Microsoft Translator Service</strong>.</returns>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</exception>
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks><para>This method performs a non-blocking request for language name.</para>
            <para>For more information, go to https://docs.microsofttranslator.com/text-translate.html#!/default/post_GetLanguageNames.
            </para>
            </remarks>
            <seealso cref="T:TranslatorService.Models.ServiceType"/>
            <see cref="M:TranslatorService.ITranslatorServiceClient.GetLanguageCodesAsync(TranslatorService.Models.ServiceType)"/>
        </member>
        <member name="M:TranslatorService.ITranslatorServiceClient.TranslateAsync(System.String,System.String)">
            <summary>
            Translates a text string into the specified language.
            </summary>
            <returns>A string representing the translated text.</returns>
            <param name="text">A string representing the text to translate.</param>
            <param name="to">A string representing the language code to translate the text into. The code must be present in the list of codes returned from the <see cref="M:TranslatorService.ITranslatorServiceClient.GetLanguageCodesAsync(TranslatorService.Models.ServiceType)"/> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:TranslatorService.ITranslatorServiceClient.Language"/> property will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            <list type="bullet">
            <term>The <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</term>
            <term>The <paramref name="text"/> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
            </list>
            </exception>        
            <exception cref="T:System.ArgumentException">The <paramref name="text"/> parameter is longer than 1000 characters.</exception>
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks><para>This method performs a non-blocking request for text translation.</para>
            <para>For more information, go to https://docs.microsofttranslator.com/text-translate.html#!/default/get_Translate.
            </para>
            </remarks>
            <seealso cref="P:TranslatorService.ITranslatorServiceClient.Language"/>
        </member>
        <member name="M:TranslatorService.ITranslatorServiceClient.TranslateAsync(System.String,System.String,System.String)">
            <summary>
            Translates a text string into the specified language.
            </summary>
            <returns>A string representing the translated text.</returns>
            <param name="text">A string representing the text to translate.</param>
            <param name="from">A string representing the language code of the original text. The code must be present in the list of codes returned from the <see cref="M:TranslatorService.ITranslatorServiceClient.GetLanguageCodesAsync(TranslatorService.Models.ServiceType)"/> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:TranslatorService.ITranslatorServiceClient.Language"/> property will be used.</param>
            <param name="to">A string representing the language code to translate the text into. The code must be present in the list of codes returned from the <see cref="M:TranslatorService.ITranslatorServiceClient.GetLanguageCodesAsync(TranslatorService.Models.ServiceType)"/> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:TranslatorService.ITranslatorServiceClient.Language"/> property will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            <list type="bullet">
            <term>The <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</term>
            <term>The <paramref name="text"/> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
            </list>
            </exception>        
            <exception cref="T:System.ArgumentException">The <paramref name="text"/> parameter is longer than 1000 characters.</exception>
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks><para>This method performs a non-blocking request for text translation.</para>
            <para>For more information, go to https://docs.microsofttranslator.com/text-translate.html#!/default/get_Translate.
            </para>
            </remarks>
            <seealso cref="P:TranslatorService.ITranslatorServiceClient.Language"/>
        </member>
        <member name="M:TranslatorService.ITranslatorServiceClient.GetSpeechStreamAsync(System.String,System.String)">
            <summary> 
            Returns a stream of a file speaking the passed-in text in the desired language. If <paramref name="language"/> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) and the <see cref="P:TranslatorService.ITranslatorServiceClient.AutoDetectLanguage"/> property is set to <strong>true</strong>, the <see cref="M:TranslatorService.ITranslatorServiceClient.DetectLanguageAsync(System.String)"/> method is used to detect the language of the speech stream. Otherwise, the language specified in the <see cref="P:TranslatorService.ITranslatorServiceClient.Language"/> property is used. 
            </summary> 
            <param name="text">A string containing the sentence to be spoken.</param> 
            <param name="language">A string representing the language code to speak the text in. The code must be present in the list of codes returned from the method <see cref="M:TranslatorService.ITranslatorServiceClient.GetLanguageCodesAsync(TranslatorService.Models.ServiceType)"/>.</param> 
            <returns>A <see cref="T:System.IO.Stream"/> object that contains a file speaking the passed-in text in the desired language.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <list type="bullet">
            <term>The <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</term>
            <term>The <paramref name="text"/> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
            </list>
            </exception>  
            <exception cref="T:System.ArgumentException">The <paramref name="text"/> parameter is longer than 1000 characters.</exception>
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks> 
            <para>This method performs a non-blocking request for speak stream.</para> 
            <para>For more information, go to https://docs.microsofttranslator.com/text-translate.html#!/default/get_Speak. 
            </para></remarks> 
            <seealso cref="T:System.IO.Stream"/> 
            <seealso cref="P:TranslatorService.ITranslatorServiceClient.Language"/> 
            <seealso cref="M:TranslatorService.ITranslatorServiceClient.GetLanguageCodesAsync(TranslatorService.Models.ServiceType)"/> 
        </member>
        <member name="T:TranslatorService.Models.ErrorResponse">
            <summary>
            Holds information about an error occurred while accessing Microsoft Translator Service.
            </summary>
        </member>
        <member name="P:TranslatorService.Models.ErrorResponse.Message">
            <summary>
            Gets or sets the error message.
            </summary>
        </member>
        <member name="P:TranslatorService.Models.ErrorResponse.StatusCode">
            <summary>
            Gets or sets the HTTP status code.
            </summary>
        </member>
        <member name="T:TranslatorService.Models.ServiceLanguage">
            <summary>
            Holds information about langagues supported for text translation and speech synthesis.
            </summary>
        </member>
        <member name="P:TranslatorService.Models.ServiceLanguage.Code">
            <summary>
            Gets the language code.
            </summary>
        </member>
        <member name="P:TranslatorService.Models.ServiceLanguage.Name">
            <summary>
            Gets the language friendly name.
            </summary>
        </member>
        <member name="M:TranslatorService.Models.ServiceLanguage.ToString">
            <summary>
            Returns the language friendly name.
            </summary>
            <returns>The language friendly name.</returns>
        </member>
        <member name="M:TranslatorService.Models.ServiceLanguage.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TranslatorService.Models.ServiceLanguage"/> class, using the specified code and name.
            </summary>
            <param name="code">The language code.</param>
            <param name="name">The language friendly name.</param>
        </member>
        <member name="T:TranslatorService.Models.ServiceType">
            <summary> 
            Specifies the service for which to retrieve the supported languages. 
            </summary> 
        </member>
        <member name="F:TranslatorService.Models.ServiceType.Translation">
            <summary> 
            Retrieves languages available for translation. 
            </summary> 
        </member>
        <member name="F:TranslatorService.Models.ServiceType.Speech">
            <summary> 
            Retrieves languages available for speech.
            </summary> 
        </member>
        <member name="T:TranslatorService.Models.SpeechStreamFormat">
            <summary> 
            Specifies the audio format of the retrieved audio stream. 
            </summary> 
        </member>
        <member name="F:TranslatorService.Models.SpeechStreamFormat.Wave">
            <summary> 
            Uses the WAVE file format. 
            </summary> 
        </member>
        <member name="F:TranslatorService.Models.SpeechStreamFormat.Mp3">
            <summary> 
            Uses the MP3 file format. 
            </summary> 
        </member>
        <member name="T:TranslatorService.Models.SpeechStreamQuality">
            <summary> 
            Specifies the audio quality of the retrieved audio stream. 
            </summary> 
        </member>
        <member name="F:TranslatorService.Models.SpeechStreamQuality.MaxQuality">
            <summary> 
            Uses the max available quality. 
            </summary> 
        </member>
        <member name="F:TranslatorService.Models.SpeechStreamQuality.MinSize">
            <summary> 
            Retrieves audio file with the minimum size. 
            </summary> 
        </member>
        <member name="T:TranslatorService.TranslatorServiceClient">
            <summary>
            The <strong>TranslatorServiceClient</strong> class provides methods to translate text to various supported languages.
            </summary>
            <remarks>
            <para>To use this library, you must register Microsoft Translator on https://portal.azure.com/#create/Microsoft.CognitiveServices/apitype/TextTranslation to obtain the Subscription key.
            </para>
            </remarks>
        </member>
        <member name="P:TranslatorService.TranslatorServiceClient.SubscriptionKey">
            <summary>
            Gets or sets the Subscription key that is necessary to use <strong>Microsoft Translator Service</strong>.
            </summary>
            <value>The Subscription Key.</value>
            <remarks>
            <para>You must register Microsoft Translator on https://portal.azure.com/#create/Microsoft.CognitiveServices/apitype/TextTranslation to obtain the Subscription key needed to use the service.</para>
            </remarks>
        </member>
        <member name="P:TranslatorService.TranslatorServiceClient.Language">
            <summary>
            Gets or sets the string representing the supported language code to translate the text to.
            </summary>
            <value>The string representing the supported language code to translate the text to. The code must be present in the list of codes returned from the method <see cref="M:TranslatorService.TranslatorServiceClient.GetLanguageCodesAsync(TranslatorService.Models.ServiceType)"/>.</value>
            <seealso cref="M:TranslatorService.TranslatorServiceClient.GetLanguageCodesAsync(TranslatorService.Models.ServiceType)"/>
        </member>
        <member name="P:TranslatorService.TranslatorServiceClient.AudioFormat">
            <summary> 
            Gets or sets the audio format of the retrieved audio stream. Currently, <strong>Wav</strong> and <strong>MP3</strong> are supported. 
            </summary> 
            <value>The audio format of the retrieved audio stream. Currently, <strong>Wav</strong> and <strong>MP3</strong> are supported.</value> 
            <remarks>The default value is <strong>MP3</strong>.</remarks>         
        </member>
        <member name="P:TranslatorService.TranslatorServiceClient.AudioQuality">
            <summary> 
            Gets or sets the audio quality of the retrieved audio stream. Currently, <strong>MaxQuality</strong> and <strong>MinSize</strong> are supported. 
            </summary> 
            <value>The audio quality of the retrieved audio stream. Currently, <strong>MaxQuality</strong> and <strong>MinSize</strong> are supported.</value> 
            <remarks> 
            With <strong>MaxQuality</strong>, you can get the voice with the highest quality, and with <strong>MinSize</strong>, you can get the voices with the smallest size. The default value is <strong>MaxQuality</strong>. 
            </remarks> 
        </member>
        <member name="P:TranslatorService.TranslatorServiceClient.AutomaticTranslation">
            <summary> 
            Gets or sets a value indicating whether the sentence to be spoken must be translated in the specified language. 
            </summary> 
            <value><strong>true</strong> if the sentence to be spoken must be translated in the specified language; otherwise, <strong>false</strong>.</value> 
            <remarks>If you don't need to translate to text to be spoken, you can speed-up the the library setting the <strong>AutomaticTranslation</strong> property to <strong>false</strong>. In this way, the specified text is passed as is to the other methods, without performing any translation. The default value is <strong>false</strong>.</remarks> 
        </member>
        <member name="P:TranslatorService.TranslatorServiceClient.AutoDetectLanguage">
            <summary> 
            Gets or sets a value indicating whether the language of the text must be automatically detected before text-to-speech. 
            </summary> 
            <value><strong>true</strong> if the language of the text must be automatically detected; otherwise, <strong>false</strong>.</value> 
            <remarks>The <strong>AutoDetectLanguage</strong> property is used when the following methods are invoked: 
            <list type="bullet"> 
            <term><see cref="M:TranslatorService.TranslatorServiceClient.GetSpeechStreamAsync(System.String,System.String)"/></term> 
            </list> 
            <para>When these methods are called, if the <strong>AutoDetectLanguage</strong> property is set to <strong>true</strong>, the language of the text is auto-detected before speech stream request. Otherwise, the language specified in the <seealso cref="P:TranslatorService.TranslatorServiceClient.Language"/> property is used.</para> 
            <para>If the language to use is explicitly specified, using the versions of the methods that accept it, no auto-detection is performed.</para> 
            <para>The default value is <strong>false</strong>.</para> 
            </remarks> 
            <seealso cref="P:TranslatorService.TranslatorServiceClient.Language"/> 
        </member>
        <member name="M:TranslatorService.TranslatorServiceClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TranslatorService.TranslatorServiceClient"/> class, using the current system language.
            </summary>
            <remarks>
            <para>You must register Microsoft Translator on https://portal.azure.com/#create/Microsoft.CognitiveServices/apitype/TextTranslation to obtain the Subscription key needed to use the service.</para>
            </remarks>
            <seealso cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/>
            <seealso cref="P:TranslatorService.TranslatorServiceClient.Language"/>
        </member>
        <member name="M:TranslatorService.TranslatorServiceClient.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TranslatorService.TranslatorServiceClient"/> class, using the specified Subscription key and the desired language.
            </summary>
            <param name="subscriptionKey">The subscription key for the Microsoft Translator Service on Azure
            </param>
            <param name="language">A string representing the supported language code to translate the text to. The code must be present in the list of codes returned from the method <see cref="M:TranslatorService.TranslatorServiceClient.GetLanguageCodesAsync(TranslatorService.Models.ServiceType)"/>. If a null value is provided, the current system language is used.
            </param>
            <remarks>
            <para>You must register Microsoft Translator on https://portal.azure.com to obtain the Subscription key needed to use the service.</para>
            </remarks>
            <seealso cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/>
            <seealso cref="P:TranslatorService.TranslatorServiceClient.Language"/>
        </member>
        <member name="M:TranslatorService.TranslatorServiceClient.InitializeAsync">
            <summary>
            Initializes the <see cref="T:TranslatorService.TranslatorServiceClient"/> class by getting an access token for the service.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the initialize operation.</returns>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</exception>
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks>Calling this method isn't mandatory, because the token is get/refreshed everytime is needed. However, it is called at startup, it can speed-up subsequest requests.</remarks>
        </member>
        <member name="M:TranslatorService.TranslatorServiceClient.DetectLanguageAsync(System.String)">
            <summary>
            Detects the language of a text.
            </summary>
            <param name="text">A string represeting the text whose language must be detected.</param>
            <returns>A string containing a two-character Language code for the given text.</returns>
            <exception cref="T:System.ArgumentNullException">
            <list type="bullet">
            <term>The <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</term>
            <term>The <paramref name="text"/> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
            </list>
            </exception>        
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks><para>This method performs a non-blocking request for language detection.</para>
            <para>For more information, go to https://docs.microsofttranslator.com/text-translate.html#!/default/get_Detect.
            </para></remarks>
            <seealso cref="M:TranslatorService.TranslatorServiceClient.GetLanguageCodesAsync(TranslatorService.Models.ServiceType)"/>
            <seealso cref="P:TranslatorService.TranslatorServiceClient.Language"/>
        </member>
        <member name="M:TranslatorService.TranslatorServiceClient.GetLanguageCodesAsync(TranslatorService.Models.ServiceType)">
            <summary>
            Retrieves the languages available for text translation and speech synthesis.
            </summary>
            <param name="serviceType">The service type for which to retrieve supported languages.</param>
            <returns>A string array containing the language codes supported for translation by <strong>Microsoft Translator Service</strong>.</returns>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</exception>
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks><para>This method performs a non-blocking request for language codes.</para>
            <para>For more information, go to https://docs.microsofttranslator.com/text-translate.html#!/default/get_GetLanguagesForTranslate (for translation languages) and https://docs.microsofttranslator.com/text-translate.html#!/default/get_GetLanguagesForSpeak (for speak synthesis).
            </para>
            </remarks>
            <seealso cref="T:TranslatorService.Models.ServiceType"/>
            <seealso cref="M:TranslatorService.TranslatorServiceClient.GetLanguageNamesAsync(TranslatorService.Models.ServiceType,System.String)"/>
        </member>
        <member name="M:TranslatorService.TranslatorServiceClient.GetLanguageNamesAsync(TranslatorService.Models.ServiceType,System.String)">
            <summary>
            Retrieves friendly names for the languages available for text translation and speech synthesis.
            </summary>
            <param name="serviceType">The service type for which to retrieve supported languages.</param>
            <param name="language">The language used to localize the language names. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:TranslatorService.TranslatorServiceClient.Language"/> property will be used.</param>
            <returns>An array of <see cref="T:TranslatorService.Models.ServiceLanguage"/> containing the language codes and names supported for translation by <strong>Microsoft Translator Service</strong>.</returns>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</exception>
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks><para>This method performs a non-blocking request for language name.</para>
            <para>For more information, go to https://docs.microsofttranslator.com/text-translate.html#!/default/post_GetLanguageNames.
            </para>
            </remarks>
            <seealso cref="T:TranslatorService.Models.ServiceType"/>
            <see cref="M:TranslatorService.TranslatorServiceClient.GetLanguageCodesAsync(TranslatorService.Models.ServiceType)"/>
        </member>
        <member name="M:TranslatorService.TranslatorServiceClient.TranslateAsync(System.String,System.String)">
            <summary>
            Translates a text string into the specified language.
            </summary>
            <returns>A string representing the translated text.</returns>
            <param name="text">A string representing the text to translate.</param>
            <param name="to">A string representing the language code to translate the text into. The code must be present in the list of codes returned from the <see cref="M:TranslatorService.TranslatorServiceClient.GetLanguageCodesAsync(TranslatorService.Models.ServiceType)"/> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:TranslatorService.TranslatorServiceClient.Language"/> property will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            <list type="bullet">
            <term>The <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</term>
            <term>The <paramref name="text"/> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
            </list>
            </exception>        
            <exception cref="T:System.ArgumentException">The <paramref name="text"/> parameter is longer than 1000 characters.</exception>
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks><para>This method performs a non-blocking request for text translation.</para>
            <para>For more information, go to https://docs.microsofttranslator.com/text-translate.html#!/default/get_Translate.
            </para>
            </remarks>
            <seealso cref="P:TranslatorService.TranslatorServiceClient.Language"/>
        </member>
        <member name="M:TranslatorService.TranslatorServiceClient.TranslateAsync(System.String,System.String,System.String)">
            <summary>
            Translates a text string into the specified language.
            </summary>
            <returns>A string representing the translated text.</returns>
            <param name="text">A string representing the text to translate.</param>
            <param name="from">A string representing the language code of the original text. The code must be present in the list of codes returned from the <see cref="M:TranslatorService.TranslatorServiceClient.GetLanguageCodesAsync(TranslatorService.Models.ServiceType)"/> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:TranslatorService.TranslatorServiceClient.Language"/> property will be used.</param>
            <param name="to">A string representing the language code to translate the text into. The code must be present in the list of codes returned from the <see cref="M:TranslatorService.TranslatorServiceClient.GetLanguageCodesAsync(TranslatorService.Models.ServiceType)"/> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:TranslatorService.TranslatorServiceClient.Language"/> property will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            <list type="bullet">
            <term>The <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</term>
            <term>The <paramref name="text"/> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
            </list>
            </exception>        
            <exception cref="T:System.ArgumentException">The <paramref name="text"/> parameter is longer than 1000 characters.</exception>
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks><para>This method performs a non-blocking request for text translation.</para>
            <para>For more information, go to https://docs.microsofttranslator.com/text-translate.html#!/default/get_Translate.
            </para>
            </remarks>
            <seealso cref="P:TranslatorService.TranslatorServiceClient.Language"/>
        </member>
        <member name="M:TranslatorService.TranslatorServiceClient.GetSpeechStreamAsync(System.String,System.String)">
            <summary> 
            Returns a stream of a file speaking the passed-in text in the desired language. If <paramref name="language"/> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) and the <see cref="P:TranslatorService.TranslatorServiceClient.AutoDetectLanguage"/> property is set to <strong>true</strong>, the <see cref="M:TranslatorService.TranslatorServiceClient.DetectLanguageAsync(System.String)"/> method is used to detect the language of the speech stream. Otherwise, the language specified in the <see cref="P:TranslatorService.TranslatorServiceClient.Language"/> property is used. 
            </summary> 
            <param name="text">A string containing the sentence to be spoken.</param> 
            <param name="language">A string representing the language code to speak the text in. The code must be present in the list of codes returned from the method <see cref="M:TranslatorService.TranslatorServiceClient.GetLanguageCodesAsync(TranslatorService.Models.ServiceType)"/>.</param> 
            <returns>A <see cref="T:System.IO.Stream"/> object that contains a file speaking the passed-in text in the desired language.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <list type="bullet">
            <term>The <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</term>
            <term>The <paramref name="text"/> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
            </list>
            </exception>  
            <exception cref="T:System.ArgumentException">The <paramref name="text"/> parameter is longer than 1000 characters.</exception>
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks> 
            <para>This method performs a non-blocking request for speak stream.</para> 
            <para>For more information, go to https://docs.microsofttranslator.com/text-translate.html#!/default/get_Speak. 
            </para></remarks> 
            <seealso cref="T:System.IO.Stream"/> 
            <seealso cref="P:TranslatorService.TranslatorServiceClient.Language"/> 
            <seealso cref="M:TranslatorService.TranslatorServiceClient.GetLanguageCodesAsync(TranslatorService.Models.ServiceType)"/> 
        </member>
        <member name="M:TranslatorService.TranslatorServiceClient.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:TranslatorService.TranslatorServiceException">
            <summary>
            The <strong>TranslatorServiceException</strong> class holds information about Exception related to <see cref="T:TranslatorService.TranslatorServiceClient"/>.
            </summary>
            <seealso cref="T:TranslatorService.TranslatorServiceClient"/>
        </member>
        <member name="M:TranslatorService.TranslatorServiceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TranslatorService.TranslatorServiceException"/> class using the specified error message.
            </summary>
            <param name="message">Message that describes the error</param>
        </member>
    </members>
</doc>
